<!--
/*
 * junitflood - An automatic junit test generator
 * Copyright 2011 MeBigFatGuy.com
 * Copyright 2011 Dave Brosius
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); 
 * you may not use this file except in compliance with the License. 
 * You may obtain a copy of the License at 
 * 
 *    http://www.apache.org/licenses/LICENSE-2.0 
 *    
 * Unless required by applicable law or agreed to in writing, 
 * software distributed under the License is distributed on an "AS IS" BASIS, 
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
 * See the License for the specific language governing permissions and limitations 
 * under the License. 
 */
-->

<project name="junitflood" default="info">

	<property file="build.properties"/>
	<property file="version.properties" />

	<property name="src.dir" value="${basedir}/src"/>
	<property name="classes.dir" value="${basedir}/classes"/>
	<property name="lib.dir" value="${basedir}/lib"/>
	<property name="javadoc.dir" value="${basedir}/javadoc"/>
	<property name="htdocs.dir" value="${basedir}/htdocs"/>
	<property name="javac.source" value="1.7"/>
	<property name="javac.target" value="1.7"/>
	<property name="javac.deprecation" value="on"/>
	<property name="javac.debug" value="on"/>

	<property name="junitflood.version" value="0.1.0"/>

	<path id="junitflood.classpath">
		<pathelement location="${classes.dir}"/>
        <pathelement location="${lib.dir}/asm-${asm.version}.jar"/>
        <pathelement location="${lib.dir}/asm-tree-${asm-tree.version}.jar"/>
		<pathelement location="${lib.dir}/commons-cli-${commons-cli.version}.jar"/>
		<pathelement location="${lib.dir}/slf4j-api-${slf4j-api.version}.jar"/>
		<pathelement location="${lib.dir}/slf4j-simple-${slf4j-simple.version}.jar"/>
	</path>
	
    <target name="info">
        <echo message="JUnitFlood - an experiment in creating junit tests from code inspection"/>
        <echo message=""/>
        <echo message="    this project uses yank (https://github.com/mebigfatguy/yank) for dependency management"/>
        <echo message="    download yank.jar and place in ant/lib directory"/>
        <echo message="    http://search.maven.org/#artifactdetails%7Ccom.mebigfatguy.yank%7Cyank%7C0.4.2%7Cjar"/>
    </target>
	
   <target name="yank" xmlns:yank="antlib:com.mebigfatguy.yank">
        <mkdir dir="${lib.dir}"/>
        <yank:yank yankFile="${basedir}/yank.xls" destination="${lib.dir}" source="true">
            <server url="http://repo1.maven.org/maven2"/>
            <generateVersions propertyFileName="${basedir}/version.properties" />
        </yank:yank>
    </target>
	
	<target name="clean" description="removes all generated collateral">
		<delete dir="${classes.dir}"/>
		<delete dir="${javadoc.dir}"/>
		<delete file="${basedir}/junitflood-${junitflood.version}.jar"/>
		<delete file="${basedir}/junitflood-src-${junitflood.version}.zip"/>
	</target>

	<target name="-init" depends="yank" description="prepares repository for a build">
		<mkdir dir="${classes.dir}"/>
		<mkdir dir="${javadoc.dir}"/>
	</target>

	<target name="compile" depends="-init" description="compiles java files">
		<javac srcdir="${src.dir}"
				destdir="${classes.dir}"
				source="${javac.source}"
				target="${javac.target}"
				deprecation="${javac.deprecation}"
				debug="${javac.debug}"
			    includeantruntime="false">
			<classpath refid="junitflood.classpath"/>
		</javac>
	</target>

	<target name="jar" depends="compile" description="produces the junitflood jar file">
		<jar destfile="${basedir}/junitflood-${junitflood.version}.jar">
			<fileset dir="${classes.dir}">
				<include name="**/*.class"/>
			</fileset>
			<manifest>
				<attribute name="junitflood-version" value="${junitflood.version}"/>
				<attribute name="Main-Class" value="com.mebigfatguy.junitflood.JUnitFlood"/>
				<attribute name="Bundle-ManifestVersion" value="2"/>
				<attribute name="Bundle-Name" value="JUnitFlood"/>
				<attribute name="Bundle-SymbolicName" value="junitflood; singleton:=true"/>
				<attribute name="Bundle-Version" value="${junitflood.version}"/>				
				<attribute name="Bundle-ClassPath" value="."/>
				<attribute name="Bundle-Vendor" value="JUnitFlood Project"/>
				<attribute name="Bundle-ActivationPolicy" value="lazy"/>
			</manifest>
		</jar>
	</target>

	<target name="srczip" description="builds the source distribution zip file">
		<zip destfile="${basedir}/junitflood-src-${junitflood.version}.zip" basedir="${basedir}">
			<fileset dir="${src.dir}">
				<include name="**/*.java"/>
			</fileset>
		</zip>
	</target>

	<target name="javadoc" depends="-init" description="build the javadoc for the project">
		<javadoc packagenames="com.mebigfatguy.*"
				 sourcepath="${src.dir}"
				 classpathref="junitflood.classpath"
				 destdir="${javadoc.dir}"
				 windowtitle="JUnitFlood api">
		    <doctitle><![CDATA[<h1>JUnitFlood Javadoc</h1>]]></doctitle>
		    <bottom><![CDATA[<i>Copyright &#169; 2011 MeBigFatGuy.com. All Rights Reserved.</i>]]></bottom>
		</javadoc>
	</target>

	<target name="build" depends="clean, -init, compile, jar" description="builds the plugin jar">
	</target>

	<target name="release" depends="build, srczip, javadoc" description="prepares everything for a release"/>
</project>
